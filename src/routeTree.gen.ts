/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as LayoutIndexRouteImport } from './routes/_layout/index'
import { Route as LayoutWalletRouteImport } from './routes/_layout/wallet'
import { Route as LayoutStoreRouteImport } from './routes/_layout/store'
import { Route as LayoutScannerRouteImport } from './routes/_layout/scanner'
import { Route as LayoutPasswordRouteImport } from './routes/_layout/password'
import { Route as LayoutMovieRouteImport } from './routes/_layout/movie'
import { Route as LayoutChecksRouteImport } from './routes/_layout/checks'
import { Route as LayoutWalletAccountIdRouteImport } from './routes/_layout/wallet.account.$id'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutIndexRoute = LayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutWalletRoute = LayoutWalletRouteImport.update({
  id: '/wallet',
  path: '/wallet',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutStoreRoute = LayoutStoreRouteImport.update({
  id: '/store',
  path: '/store',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutScannerRoute = LayoutScannerRouteImport.update({
  id: '/scanner',
  path: '/scanner',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutPasswordRoute = LayoutPasswordRouteImport.update({
  id: '/password',
  path: '/password',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutMovieRoute = LayoutMovieRouteImport.update({
  id: '/movie',
  path: '/movie',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutChecksRoute = LayoutChecksRouteImport.update({
  id: '/checks',
  path: '/checks',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutWalletAccountIdRoute = LayoutWalletAccountIdRouteImport.update({
  id: '/account/$id',
  path: '/account/$id',
  getParentRoute: () => LayoutWalletRoute,
} as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/checks': typeof LayoutChecksRoute
  '/movie': typeof LayoutMovieRoute
  '/password': typeof LayoutPasswordRoute
  '/scanner': typeof LayoutScannerRoute
  '/store': typeof LayoutStoreRoute
  '/wallet': typeof LayoutWalletRouteWithChildren
  '/': typeof LayoutIndexRoute
  '/wallet/account/$id': typeof LayoutWalletAccountIdRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/checks': typeof LayoutChecksRoute
  '/movie': typeof LayoutMovieRoute
  '/password': typeof LayoutPasswordRoute
  '/scanner': typeof LayoutScannerRoute
  '/store': typeof LayoutStoreRoute
  '/wallet': typeof LayoutWalletRouteWithChildren
  '/': typeof LayoutIndexRoute
  '/wallet/account/$id': typeof LayoutWalletAccountIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_layout': typeof LayoutRouteWithChildren
  '/login': typeof LoginRoute
  '/_layout/checks': typeof LayoutChecksRoute
  '/_layout/movie': typeof LayoutMovieRoute
  '/_layout/password': typeof LayoutPasswordRoute
  '/_layout/scanner': typeof LayoutScannerRoute
  '/_layout/store': typeof LayoutStoreRoute
  '/_layout/wallet': typeof LayoutWalletRouteWithChildren
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/wallet/account/$id': typeof LayoutWalletAccountIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/checks'
    | '/movie'
    | '/password'
    | '/scanner'
    | '/store'
    | '/wallet'
    | '/'
    | '/wallet/account/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/checks'
    | '/movie'
    | '/password'
    | '/scanner'
    | '/store'
    | '/wallet'
    | '/'
    | '/wallet/account/$id'
  id:
    | '__root__'
    | '/_layout'
    | '/login'
    | '/_layout/checks'
    | '/_layout/movie'
    | '/_layout/password'
    | '/_layout/scanner'
    | '/_layout/store'
    | '/_layout/wallet'
    | '/_layout/'
    | '/_layout/wallet/account/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/wallet': {
      id: '/_layout/wallet'
      path: '/wallet'
      fullPath: '/wallet'
      preLoaderRoute: typeof LayoutWalletRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/store': {
      id: '/_layout/store'
      path: '/store'
      fullPath: '/store'
      preLoaderRoute: typeof LayoutStoreRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/scanner': {
      id: '/_layout/scanner'
      path: '/scanner'
      fullPath: '/scanner'
      preLoaderRoute: typeof LayoutScannerRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/password': {
      id: '/_layout/password'
      path: '/password'
      fullPath: '/password'
      preLoaderRoute: typeof LayoutPasswordRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/movie': {
      id: '/_layout/movie'
      path: '/movie'
      fullPath: '/movie'
      preLoaderRoute: typeof LayoutMovieRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/checks': {
      id: '/_layout/checks'
      path: '/checks'
      fullPath: '/checks'
      preLoaderRoute: typeof LayoutChecksRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/wallet/account/$id': {
      id: '/_layout/wallet/account/$id'
      path: '/account/$id'
      fullPath: '/wallet/account/$id'
      preLoaderRoute: typeof LayoutWalletAccountIdRouteImport
      parentRoute: typeof LayoutWalletRoute
    }
  }
}

interface LayoutWalletRouteChildren {
  LayoutWalletAccountIdRoute: typeof LayoutWalletAccountIdRoute
}

const LayoutWalletRouteChildren: LayoutWalletRouteChildren = {
  LayoutWalletAccountIdRoute: LayoutWalletAccountIdRoute,
}

const LayoutWalletRouteWithChildren = LayoutWalletRoute._addFileChildren(
  LayoutWalletRouteChildren,
)

interface LayoutRouteChildren {
  LayoutChecksRoute: typeof LayoutChecksRoute
  LayoutMovieRoute: typeof LayoutMovieRoute
  LayoutPasswordRoute: typeof LayoutPasswordRoute
  LayoutScannerRoute: typeof LayoutScannerRoute
  LayoutStoreRoute: typeof LayoutStoreRoute
  LayoutWalletRoute: typeof LayoutWalletRouteWithChildren
  LayoutIndexRoute: typeof LayoutIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutChecksRoute: LayoutChecksRoute,
  LayoutMovieRoute: LayoutMovieRoute,
  LayoutPasswordRoute: LayoutPasswordRoute,
  LayoutScannerRoute: LayoutScannerRoute,
  LayoutStoreRoute: LayoutStoreRoute,
  LayoutWalletRoute: LayoutWalletRouteWithChildren,
  LayoutIndexRoute: LayoutIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
